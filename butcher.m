function B = butcher(method_name)
% Usage: B = butcher(method_name)
%
% Returns the butcher table associated with the method given by the input
% argument 'method_name'.  We compute the internal stage times (root nodes)
% c, the Butcher matrix A, the method coefficients b, and the order
% of accuracy for the method q.   The output table has the block structure
%     B = [c, A; q, b]
% for a standard Runge-Kutta method.
%
% If the method has an embedded error indicator, we also compute the embedded
% method's coefficients b2 and order of accuracy p, and provide the output
%     B = [c, A; q, b; p, b2]
%
% Method types are specified by the abbreviations:
%       ERK - explicit Runge Kutta (strictly lower-triangular A)
%       IRK - implicit Runge Kutta (dense A)
%      DIRK - diagonally-implicit Runge Kutta (lower-triangular A)
%     SDIRK - singly-diagonally implicit Runge Kutta (DIRK with fixed diagonal)
%    ESDIRK - SDIRK method with an initial explicit stage
%
% Allowed methods are listed below.  They are grouped by category
% (ERK, DIRK, IRK) and subcategory (non-embedded vs embedded).
% Each method lists:
% - the number of stages (s)
% - the order of accuracy of the stages (qs)
% - the order of accuracy of the method (q)
% - the linear order of the method (lq) -- i.e. the order of
%   accuracy when the IVP RHS f(t,y) depends linearly on y
% - A,B,L-stability of the method (implicit methods only)
%
% Additionally, if the method contains an embedding, the table
% below also lists:
% - the embedding order of accuracy (p)
% - the embedding linear order of accuracy (lp)
% - A,B,L-stability of the embedding (implicit methods only)
%
% Note: all method properties listed are automatically computed
% using the accompanying check_rk() function with a relatively
% loose tolerance of 1e-9.  However, it is possible that a method
% has higher order of accuracy than reported by that routine; hence
% the values of q and p in this table may differ from the
% self-reported orders of accuracy contained within each table.
%
% Explicit, no embedding:
%
%              Name             |  s  qs  |  q  lq
%  -------------------------------------------------
%                      ERK-1-1  |  1   1  |  1   1
%                      ERK-2-2  |  2   1  |  2   2
%              SSP2(2,2,2)-ERK  |  2   1  |  2   2
%            Ascher(2,3,3)-ERK  |  3   1  |  3   3
%              Knoth-Wolke-ERK  |  3   1  |  3   3
%              SSP3(3,3,2)-ERK  |  3   1  |  3   3
%              SSP3(3,3,3)-ERK  |  3   1  |  3   3
%     SSPRK(3,3)-Shu-Osher-ERK  |  3   1  |  3   3
%            Ascher(2,3,2)-ERK  |  3   1  |  2   3
%               ARK(2,3,2)-ERK  |  3   1  |  2   3
%            Ascher(2,2,2)-ERK  |  3   1  |  2   2
%         SSP2(3,3,2)-lpm1-ERK  |  3   1  |  2   2
%         SSP2(3,3,2)-lpm2-ERK  |  3   1  |  2   2
%         SSP2(3,3,2)-lpum-ERK  |  3   1  |  2   2
%        SSP2(3,3,2)-lspum-ERK  |  3   1  |  2   2
%            SSP2(3,3,2)-a-ERK  |  3   1  |  2   2
%            SSP2(3,3,2)-b-ERK  |  3   1  |  2   2
%                 3/8-Rule-ERK  |  4   1  |  4   4
%                      ERK-4-4  |  4   1  |  4   4
%            Ascher(3,4,3)-ERK  |  4   1  |  3   4
%              SSP3(4,3,3)-ERK  |  4   1  |  3   3
%                  Cooper4-ERK  |  4   1  |  3   3
%            Ascher(4,4,3)-ERK  |  5   1  |  3   3
%                  DBM-5-3-ERK  |  5   1  |  3   3
%                  Cooper6-ERK  |  6   1  |  4   4
%
%
% Explicit, with embedding:
%
%                               |         |  Method  |  Embedding
%              Name             |  s  qs  |  q  lq   |  p  lp
%  -----------------------------------------------------------------
%               Heun-Euler-ERK  |  2   1  |  2   2   |  1   1
%                      ERK-3-3  |  3   1  |  3   3   |  2   2
%           ARK3(2)4L[2]SA-ERK  |  4   1  |  3   3   |  2   2
%         Bogacki-Shampine-ERK  |  4   1  |  3   3   |  2   2
%               Merson-4-3-ERK  |  5   1  |  4   4   |  3   5
%            Zonneveld-4-3-ERK  |  5   1  |  4   4   |  3   3
%                Cash-Karp-ERK  |  6   1  |  5   5   |  4   4
%                 Fehlberg-ERK  |  6   1  |  4   4   |  5   5
%           ARK4(3)6L[2]SA-ERK  |  6   1  |  4   4   |  3   3
%         Sayfy-Aburub-4-3-ERK  |  6   1  |  4   4   |  3   3
%           Dormand-Prince-ERK  |  7   1  |  5   5   |  4   4
%           ARK4(3)7L[2]SA-ERK  |  7   1  |  4   4   |  3   3
%               Verner-6-5-ERK  |  8   1  |  5   6   |  5   5
%           ARK5(4)8L[2]SA-ERK  |  8   1  |  5   5   |  4   4
%          ARK5(4)8L[2]SAb-ERK  |  8   1  |  5   5   |  4   4
%             Fehlberg-8-7-ERK  | 13   1  |  5   8   |  5   7
%
%
% Diagonally-implicit, no embedding:
%
%              Name             |  s  qs  |  q  lq   A   B   L
%  -------------------------------------------------------------
%            SSP2(2,2,2)-SDIRK  |  2   1  |  2   2   Y   Y
%                    SDIRK-2-2  |  2   1  |  2   2   Y       Y
%             ARK(2,3,2)-SDIRK  |  3   2  |  2   2   Y       Y
%          Ascher(2,3,3)-SDIRK  |  3   1  |  3   3   Y   Y
%                    EDIRK-3-3  |  3   1  |  3   3   Y
%                   ESDIRK-3-3  |  3   1  |  3   3   Y
%           SSP3(3,3,3)-ESDIRK  |  3   1  |  3   3
%       SSP2(3,3,2)-lpm1-SDIRK  |  3   1  |  2   2   Y
%       SSP2(3,3,2)-lpm2-SDIRK  |  3   1  |  2   2   Y       Y
%       SSP2(3,3,2)-lpum-SDIRK  |  3   1  |  2   2   Y       Y
%      SSP2(3,3,2)-lspum-SDIRK  |  3   1  |  2   2   Y       Y
%           SSP2(3,3,2)-a-DIRK  |  3   1  |  2   2   Y       Y
%           SSP2(3,3,2)-b-DIRK  |  3   1  |  2   2   Y       Y
%            SSP3(3,3,2)-SDIRK  |  3   1  |  2   2   Y
%          Ascher(2,3,2)-SDIRK  |  3   1  |  2   2   Y       Y
%          Ascher(2,2,2)-SDIRK  |  3   1  |  2   2   Y       Y
%          Ascher(3,4,3)-SDIRK  |  4   1  |  3   3   Y       Y
%          Ascher(4,4,3)-SDIRK  |  4   1  |  3   3   Y       Y
%               Cooper4-ESDIRK  |  4   1  |  3   3   Y
%            SSP3(4,3,3)-SDIRK  |  4   1  |  3   3   Y
%               DBM-5-3-ESDIRK  |  5   1  |  3   3   Y
%               Cooper6-ESDIRK  |  6   1  |  4   4   Y
%
%
% Diagonally-implicit, with embedding:
%
%                               |         |       Method        |     Embedding
%              Name             |  s  qs  |  q  lq   A   B   L  |  p  lp   A   B   L
%  -----------------------------------------------------------------------------------
%                    SDIRK-2-1  |  2   1  |  2   2   Y   Y      |  1   1   Y   Y   Y
%                TRBDF2-ESDIRK  |  3   2  |  2   2   Y       Y  |  3   3
%                  TRX2-ESDIRK  |  3   2  |  2   2   Y          |  3   3
%             Billington-SDIRK  |  3   1  |  2   2   Y          |  3   3
%        ARK3(2)4L[2]SA-ESDIRK  |  4   2  |  3   3   Y          |  2   2   Y
%        Kvaerno(4,2,3)-ESDIRK  |  4   2  |  3   3   Y          |  2   2   Y
%        Kvaerno(5,3,4)-ESDIRK  |  5   2  |  4   4   Y          |  3   3   Y
%                    SDIRK-5-4  |  5   1  |  4   4   Y       Y  |  3   3           Y
%            Cash(5,3,4)-SDIRK  |  5   1  |  4   4   Y       Y  |  3   3   Y
%            Cash(5,2,4)-SDIRK  |  5   1  |  4   4   Y       Y  |  2   2   Y
%        ARK4(3)6L[2]SA-ESDIRK  |  6   2  |  4   4   Y       Y  |  3   3   Y
%        Kvaerno(7,4,5)-ESDIRK  |  7   2  |  5   5   Y       Y  |  4   4   Y
%        ARK4(3)7L[2]SA-ESDIRK  |  7   2  |  4   4   Y       Y  |  3   3   Y       Y
%        ARK5(4)8L[2]SA-ESDIRK  |  8   2  |  5   5   Y       Y  |  4   4   Y
%       ARK5(4)8L[2]SAb-ESDIRK  |  8   2  |  5   5   Y       Y  |  4   4   Y
%
%
% Fully implicit, no embedding:
%
%              Name             |  s  qs  |  q  lq   A   B   L
%  -------------------------------------------------------------
%                      IRK-1-1  |  1   1  |  1   1   Y   Y   Y
%                Gauss-2-4-IRK  |  2   2  |  4   4   Y   Y
%             RadauIIA-2-3-IRK  |  2   2  |  3   3   Y   Y   Y
%          LobattoIIIC-2-2-IRK  |  2   1  |  2   2   Y   Y   Y
%                     SIRK-2-2  |  2   2  |  2   2   Y       Y
%       Crank-Nicolson-2-2-IRK  |  2   2  |  2   2   Y
%          LobattoIIIA-2-2-IRK  |  2   2  |  2   2   Y
%           LobattoIII-2-2-IRK  |  2   1  |  2   2
%                Gauss-3-6-IRK  |  3   3  |  6   6   Y   Y
%              RadauIA-3-5-IRK  |  3   2  |  5   5   Y   Y   Y
%             RadauIIA-3-5-IRK  |  3   3  |  5   5   Y   Y   Y
%               RadauI-3-5-IRK  |  3   3  |  5   5
%              RadauII-3-5-IRK  |  3   2  |  5   5
%          LobattoIIIC-3-4-IRK  |  3   2  |  4   4   Y   Y   Y
%          LobattoIIIA-3-4-IRK  |  3   3  |  4   4   Y
%          LobattoIIIB-3-4-IRK  |  3   1  |  4   4   Y
%           LobattoIII-3-4-IRK  |  3   2  |  4   4
%          LobattoIIIC-4-6-IRK  |  4   3  |  6   6   Y   Y   Y
%          LobattoIIIA-4-6-IRK  |  4   4  |  6   6   Y
%          LobattoIIIB-4-6-IRK  |  4   2  |  6   6   Y
%           LobattoIII-4-6-IRK  |  4   3  |  6   6
%             RadauIIA-5-9-IRK  |  5   5  |  9   8   Y   Y   Y
%          LobattoIIIC-5-8-IRK  |  5   4  |  8   8   Y   Y   Y
%          LobattoIIIA-5-8-IRK  |  5   5  |  8   8   Y
%          LobattoIIIB-5-8-IRK  |  5   3  |  8   8   Y
%           LobattoIII-5-8-IRK  |  5   4  |  8   8
%               Gauss-6-12-IRK  |  6   6  | 12   8   Y   Y
%
%------------------------------------------------------------
% Programmer(s):  Daniel R. Reynolds @ SMU
%------------------------------------------------------------
% Copyright (c) 2018, Southern Methodist University.
% All rights reserved.
% For details, see the LICENSE file.
%------------------------------------------------------------

% set the butcher table
if (strcmp(method_name,'DBM-5-3-ERK'))
   c = [0; 0.1030620881159184; 0.72139131281753662; 1.28181117351981733; 1 ];
   b = [ 0.87795339639076672, -0.72692641526151549, 0.7520413715737272, ...
         -0.22898029400415090, 0.32591194130117246 ];
   A = [ 0, 0, 0, 0, 0;
         0.10306208811591838, 0, 0, 0, 0;
         -0.94124866143519894, 1.6626399742527356,  0, 0, 0;
         -1.3670975201437765,  1.3815852911016873,  1.2673234025619065,  0, 0;
         -0.81287582068772448, 0.81223739060505738, 0.90644429603699305, ...
            0.094194134045674111, 0 ];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'DBM-5-3-ESDIRK'))
   c = [0; 0.1030620881159184; 0.72139131281753662; 1.28181117351981733; 1 ];
   b = [ 0.87795339639076672, -0.72692641526151549, 0.7520413715737272, ...
         -0.22898029400415090, 0.32591194130117246 ];
   A = [ 0, 0, 0, 0, 0;
         -0.22284985318525410,  0.32591194130117247, 0, 0, 0;
         -0.46801347074080545,  0.86349284225716961, 0.32591194130117247,  0, 0;
         -0.46509906651927421,  0.81063103116959553, 0.61036726756832357,  0.32591194130117245, 0;
         0.87795339639076675, -0.72692641526151547, 0.75204137157372720, ...
            -0.22898029400415088, 0.32591194130117247 ];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'ARK3(2)4L[2]SA-ERK'))

   c = [0; 1767732205903/2027836641118; 3/5; 1];
   b = [1471266399579/7840856788654, -4482444167858/7529755066697, ...
      11266239266428/11593286722821, 1767732205903/4055673282236];
   b2 = [2756255671327/12835298489170, -10771552573575/22201958757719, ...
      9247589265047/10645013368117, 2193209047091/5459859503100];
   A = [0, 0, 0, 0;
      1767732205903/2027836641118, 0, 0, 0;
      5535828885825/10492691773637, 788022342437/10882634858940, 0, 0;
      6485989280629/16251701735622, -4246266847089/9704473918619, ...
          10755448449292/10357097424841, 0];
   q = 3;
   p = 2;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK3(2)4L[2]SA-ESDIRK'))

   c = [0; 1767732205903/2027836641118; 3/5; 1];
   b = [1471266399579/7840856788654, -4482444167858/7529755066697, ...
      11266239266428/11593286722821, 1767732205903/4055673282236];
   b2 = [2756255671327/12835298489170, -10771552573575/22201958757719,  ...
      9247589265047/10645013368117, 2193209047091/5459859503100];
   gamma = 1767732205903/4055673282236;
   A = [0, 0, 0, 0;
      1767732205903/4055673282236, gamma, 0, 0;
      2746238789719/10658868560708, -640167445237/6845629431997, gamma, 0;
      1471266399579/7840856788654, -4482444167858/7529755066697, ...
          11266239266428/11593286722821, gamma];
   q = 3;
   p = 2;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK4(3)6L[2]SA-ERK'))

   c = [0; 1/2; 83/250; 31/50; 17/20; 1];
   b = [82889/524892, 0, 15625/83664, 69875/102672, -2260/8211, 1/4];
   b2 = [4586570599/29645900160, 0, 178811875/945068544, ...
      814220225/1159782912, -3700637/11593932, 61727/225920];
   A = [0, 0, 0, 0, 0, 0;
      1/2, 0, 0, 0, 0, 0;
      13861/62500, 6889/62500, 0 0 0 0;
      -116923316275/2393684061468, -2731218467317/15368042101831, ...
          9408046702089/11113171139209, 0, 0, 0;
      -451086348788/2902428689909, -2682348792572/7519795681897, ...
          12662868775082/11960479115383, 3355817975965/11060851509271, 0, 0;
      647845179188/3216320057751, 73281519250/8382639484533, ...
          552539513391/3454668386233, 3354512671639/8306763924573, ...
          4040/17871, 0];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK4(3)6L[2]SA-ESDIRK'))

   c = [0; 1/2; 83/250; 31/50; 17/20; 1];
   b = [82889/524892, 0, 15625/83664, 69875/102672, -2260/8211, 1/4];
   b2 = [4586570599/29645900160, 0, 178811875/945068544, ...
      814220225/1159782912, -3700637/11593932, 61727/225920];
   A = [0, 0, 0, 0, 0, 0;
      1/4, 1/4, 0, 0, 0, 0;
      8611/62500, -1743/31250, 1/4, 0, 0, 0;
      5012029/34652500, -654441/2922500, 174375/388108, 1/4, 0, 0;
      15267082809/155376265600, -71443401/120774400, 730878875/902184768, ...
         2285395/8070912, 1/4, 0;
      82889/524892, 0, 15625/83664, 69875/102672, -2260/8211, 1/4];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK4(3)7L[2]SA-ERK'))

   c = [0; 247/1000; 4276536705230/10142255878289; 67/200; 3/40; 7/10; 1];
   b = [0, 0, 9164257142617/17756377923965, -10812980402763/74029279521829, ...
       1335994250573/5691609445217, 2273837961795/8368240463276, 247/2000];
   b2 = [0, 0, 4469248916618/8635866897933, -621260224600/4094290005349, ...
        696572312987/2942599194819, 1532940081127/5565293938103, 2441/20000];
   A = [0, 0, 0, 0, 0, 0, 0;
        247/1000, 0, 0, 0, 0, 0, 0;
        247/4000, 2694949928731/7487940209513, 0, 0, 0, 0, 0;
        464650059369/8764239774964, 878889893998/2444806327765, ...
           -952945855348/12294611323341, 0, 0, 0, 0;
        476636172619/8159180917465, -1271469283451/7793814740893, ...
           -859560642026/4356155882851, 1723805262919/4571918432560, ...
           0, 0, 0;
        6338158500785/11769362343261, -4970555480458/10924838743837, ...
           3326578051521/2647936831840, -880713585975/1841400956686, ...
           -1428733748635/8843423958496, 0, 0;
        760814592956/3276306540349, 760814592956/3276306540349, ...
           -47223648122716/6934462133451, 71187472546993/9669769126921, ...
           -13330509492149/9695768672337, 11565764226357/8513123442827, 0];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK4(3)7L[2]SA-ESDIRK'))

   gam = 1235/10000;
   c = [0; 247/1000; 4276536705230/10142255878289; 67/200; 3/40; 7/10; 1];
   b = [0, 0, 9164257142617/17756377923965, -10812980402763/74029279521829, ...
       1335994250573/5691609445217, 2273837961795/8368240463276, 247/2000];
   b2 = [0, 0, 4469248916618/8635866897933, -621260224600/4094290005349, ...
        696572312987/2942599194819, 1532940081127/5565293938103, 2441/20000];
   A = [0, 0, 0, 0, 0, 0, 0;
        gam, gam, 0, 0, 0, 0, 0;
        624185399699/4186980696204, 624185399699/4186980696204, gam, ...
           0, 0, 0, 0;
        1258591069120/10082082980243, 1258591069120/10082082980243, ...
           -322722984531/8455138723562, gam, 0, 0, 0;
        -436103496990/5971407786587, -436103496990/5971407786587, ...
           -2689175662187/11046760208243, 4431412449334/12995360898505, gam, 0, 0;
        -2207373168298/14430576638973, -2207373168298/14430576638973, ...
           242511121179/3358618340039, 3145666661981/7780404714551, ...
           5882073923981/14490790706663, gam, 0;
        0, 0, 9164257142617/17756377923965, -10812980402763/74029279521829, ...
           1335994250573/5691609445217, 2273837961795/8368240463276, gam];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK5(4)8L[2]SA-ERK'))

   c = [0; 41/100; 2935347310677/11292855782101; ...
      1426016391358/7196633302097; 92/100; 24/100; 3/5; 1];
   b = [-872700587467/9133579230613, 0, 0, 22348218063261/9555858737531, ...
          -1143369518992/8141816002931, -39379526789629/19018526304540, ...
          32727382324388/42900044865799, 41/200];
   b2 = [-975461918565/9796059967033, 0, 0, 78070527104295/32432590147079, ...
          -548382580838/3424219808633, -33438840321285/15594753105479, ...
          3629800801594/4656183773603, 4035322873751/18575991585200];
   A = [0, 0, 0, 0, 0, 0, 0, 0;
        41/100, 0, 0, 0, 0, 0, 0, 0;
        367902744464/2072280473677, 677623207551/8224143866563, 0, 0, 0, 0, 0, 0;
        1268023523408/10340822734521, 0, 1029933939417/13636558850479, 0,0,0,0,0;
        14463281900351/6315353703477, 0, 66114435211212/5879490589093, ...
            -54053170152839/4284798021562, 0,0,0,0;
        14090043504691/34967701212078, 0, 15191511035443/11219624916014, ...
            -18461159152457/12425892160975, -281667163811/9011619295870, 0,0,0;
        19230459214898/13134317526959, 0, 21275331358303/2942455364971, ...
            -38145345988419/4862620318723, -1/8, -1/8, 0, 0;
        -19977161125411/11928030595625, 0, -40795976796054/6384907823539, ...
            177454434618887/12078138498510, 782672205425/8267701900261, ...
            -69563011059811/9646580694205, 7356628210526/4942186776405, 0];
   q = 5;
   p = 4;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK5(4)8L[2]SA-ESDIRK'))

   c = [0; 41/100; 2935347310677/11292855782101; ...
      1426016391358/7196633302097; 92/100; 24/100; 3/5; 1];
   b = [-872700587467/9133579230613, 0, 0, 22348218063261/9555858737531, ...
          -1143369518992/8141816002931, -39379526789629/19018526304540, ...
          32727382324388/42900044865799, 41/200];
   b2 = [-975461918565/9796059967033, 0, 0, 78070527104295/32432590147079, ...
          -548382580838/3424219808633, -33438840321285/15594753105479, ...
          3629800801594/4656183773603, 4035322873751/18575991585200];
   A = [0, 0, 0, 0, 0, 0, 0, 0;
      41/200, 41/200, 0, 0, 0, 0, 0, 0;
      41/400, -567603406766/11931857230679, 41/200, 0, 0, 0, 0, 0;
      683785636431/9252920307686, 0, -110385047103/1367015193373, 41/200, 0,0,0,0;
      3016520224154/10081342136671, 0, 30586259806659/12414158314087, ...
          -22760509404356/11113319521817, 41/200, 0, 0, 0;
      218866479029/1489978393911, 0, 638256894668/5436446318841, ...
          -1179710474555/5321154724896, -60928119172/8023461067671, 41/200, 0,0;
      1020004230633/5715676835656, 0, 25762820946817/25263940353407, ...
          -2161375909145/9755907335909, -211217309593/5846859502534, ...
          -4269925059573/7827059040749, 41/200, 0;
      -872700587467/9133579230613, 0, 0, 22348218063261/9555858737531, ...
          -1143369518992/8141816002931, -39379526789629/19018526304540, ...
          32727382324388/42900044865799, 41/200];
   q = 5;
   p = 4;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK5(4)8L[2]SAb-ERK'))

   gam = 2/9;
   c = [0; 4/9; 6456083330201/8509243623797; 1632083962415/14158861528103; ...
        6365430648612/17842476412687; 18/25; 191/200; 1];
   b = [0, 0, 3517720773327/20256071687669, 4569610470461/17934693873752, ...
        2819471173109/11655438449929, 3296210113763/10722700128969, ...
        -1142099968913/5710983926999, gam];
   b2 = [0, 0, 520639020421/8300446712847, 4550235134915/17827758688493, ...
         1482366381361/6201654941325, 5551607622171/13911031047899, ...
         -5266607656330/36788968843917, 1074053359553/5740751784926];
   A = [0, 0, 0, 0, 0, 0, 0, 0;
        4/9, 0, 0, 0, 0, 0, 0, 0;
        1/9, 1183333538310/1827251437969, 0, 0, 0, 0, 0, 0;
        895379019517/9750411845327, 477606656805/13473228687314, ...
           -112564739183/9373365219272, 0, 0, 0, 0, 0;
        -4458043123994/13015289567637, -2500665203865/9342069639922, ...
           983347055801/8893519644487, 2185051477207/2551468980502, ...
           0, 0, 0, 0;
        -167316361917/17121522574472, 1605541814917/7619724128744, ...
           991021770328/13052792161721, 2342280609577/11279663441611, ...
           3012424348531/12792462456678, 0, 0, 0;
        6680998715867/14310383562358, 5029118570809/3897454228471, ...
           2415062538259/6382199904604, -3924368632305/6964820224454, ...
           -4331110370267/15021686902756, -3944303808049/11994238218192, ...
           0, 0;
        2193717860234/3570523412979, 2193717860234/3570523412979, ...
           5952760925747/18750164281544, -4412967128996/6196664114337, ...
           4151782504231/36106512998704, 572599549169/6265429158920, ...
        -457874356192/11306498036315, 0];
   q = 5;
   p = 4;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ARK5(4)8L[2]SAb-ESDIRK'))

   gam = 2/9;
   c = [0; 4/9; 6456083330201/8509243623797; 1632083962415/14158861528103; ...
        6365430648612/17842476412687; 18/25; 191/200; 1];
   b = [0, 0, 3517720773327/20256071687669, 4569610470461/17934693873752, ...
        2819471173109/11655438449929, 3296210113763/10722700128969, ...
        -1142099968913/5710983926999, gam];
   b2 = [0, 0, 520639020421/8300446712847, 4550235134915/17827758688493, ...
         1482366381361/6201654941325, 5551607622171/13911031047899, ...
         -5266607656330/36788968843917, 1074053359553/5740751784926];
   A = [0, 0, 0, 0, 0, 0, 0, 0;
        gam, gam, 0, 0, 0, 0, 0, 0;
        2366667076620/8822750406821, 2366667076620/8822750406821, ...
           gam, 0, 0, 0, 0, 0;
        -257962897183/4451812247028, -257962897183/4451812247028, ...
           128530224461/14379561246022, gam, 0, 0, 0, 0;
        -486229321650/11227943450093, -486229321650/11227943450093, ...
           -225633144460/6633558740617, 1741320951451/6824444397158, ...
           gam, 0, 0, 0;
        621307788657/4714163060173, 621307788657/4714163060173, ...
           -125196015625/3866852212004, 940440206406/7593089888465, ...
           961109811699/6734810228204, gam, 0, 0;
        2036305566805/6583108094622, 2036305566805/6583108094622, ...
           -3039402635899/4450598839912, -1829510709469/31102090912115, ...
           -286320471013/6931253422520, 8651533662697/9642993110008, ...
           gam, 0;
        0, 0, 3517720773327/20256071687669, 4569610470461/17934693873752, ...
           2819471173109/11655438449929, 3296210113763/10722700128969, ...
           -1142099968913/5710983926999, gam];
   q = 5;
   p = 4;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Sayfy-Aburub-4-3-ERK'))

   A = [0, 0, 0, 0, 0, 0; ...
        1/2, 0, 0, 0, 0, 0;
        -1, 2, 0, 0, 0, 0;
        1/6, 2/3, 1/6, 0, 0, 0;
        0.137, 0.226, 0.137, 0, 0, 0;
        0.452, -0.904, -0.548, 0, 2, 0];
   b = [1/6, 1/3, 1/12, 0, 1/3, 1/12];
   b2 = [1/6, 2/3, 1/6, 0, 0, 0];
   c = [0; 1/2; 1; 1; 1/2; 1];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Ascher(2,3,3)-ERK'))

   gamma = (3 + sqrt(3))/6;
   c = [0; gamma; 1-gamma];
   b = [0, 1/2, 1/2];
   A = [0,       0,           0;
        gamma,   0,           0;
        gamma-1, 2*(1-gamma), 0];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(2,3,3)-SDIRK'))

   gamma = (3 + sqrt(3))/6;
   c = [0; gamma; 1-gamma];
   b = [0, 1/2, 1/2];
   A = [0, 0,         0;
        0, gamma,     0;
        0, 1-2*gamma, gamma];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(2,3,2)-ERK'))

   gamma = (2-sqrt(2))/2;
   delta = -2*sqrt(2)/3;
   c = [0; gamma; 1];
   b = [0, 1-gamma, gamma];
   A = [0, 0, 0;
        gamma, 0, 0;
        delta, 1-delta, 0];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(2,3,2)-SDIRK'))

   gamma = (2-sqrt(2))/2;
   c = [0; gamma; 1];
   b = [0, 1-gamma, gamma];
   A = [0, 0,       0;
        0, gamma,   0;
        0, 1-gamma, gamma];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(2,2,2)-ERK'))

   gamma = (2-sqrt(2))/2;
   delta = 1-1/(2*gamma);
   c = [0; gamma; 1];
   b = [delta, 1-delta, 0];
   A = [0, 0, 0;
        gamma, 0, 0;
        delta, 1-delta, 0];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(2,2,2)-SDIRK'))

   gamma = (2-sqrt(2))/2;
   c = [0; gamma; 1];
   b = [0, 1-gamma, gamma];
   A = [0, 0,       0;
        0, gamma,   0;
        0, 1-gamma, gamma];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(3,4,3)-ERK'))

   gamma  = 0.4358665215084590;
   gamma2 = gamma^2;

   b1 = -1.5 * gamma2 + 4.0 * gamma - 0.25;
   b2 =  1.5 * gamma2 - 5.0 * gamma + 1.25;

   a42 = 0.5529291480359398;
   a43 = 0.5529291480359398;

   a31 = (1.0 - 4.5 * gamma + 1.5 * gamma2) * a42 ...
       + (2.75 - 10.5 * gamma + 3.75 * gamma2) * a43 ...
       - 3.5 + 13 * gamma - 4.5 * gamma2;

   a32 = (-1.0 + 4.5 * gamma - 1.5 * gamma2) * a42 ...
       + (-2.75 + 10.5 * gamma - 3.75 * gamma2) * a43 ...
       + 4.0 - 12.5 * gamma + 4.5 * gamma2;

   a41 = 1.0 - a42 - a43;

   c = [0; gamma; (1+gamma)/2; 1];
   b = [0, b1, b2, gamma];
   A = [0,     0,   0,   0;
        gamma, 0,   0,   0;
        a31,   a32, 0,   0;
        a41,   a42, a43, 0];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(3,4,3)-SDIRK'))

   gamma  = 0.4358665215084590;
   gamma2 = gamma^2;

   b1 = -1.5 * gamma2 + 4.0 * gamma - 0.25;
   b2 =  1.5 * gamma2 - 5.0 * gamma + 1.25;

   c = [0; gamma; (1+gamma)/2; 1];
   b = [0, b1, b2, gamma];
   A = [0,     0,           0,     0;
        0, gamma,           0,     0;
        0, (1-gamma)/2, gamma,     0;
        0, b1,             b2, gamma];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(4,4,3)-ERK'))

   c = [0; 1/2; 2/3; 1/2; 1];
   b = [1/4, 7/4, 3/4, -7/4, 0];
   A = [    0,    0,   0,    0, 0;
          1/2,    0,   0,    0, 0;
        11/18, 1/18,   0,    0, 0;
          5/6, -5/6, 1/2,    0, 0;
          1/4,  7/4, 3/4, -7/4, 0];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Ascher(4,4,3)-SDIRK'))

   c = [1/2; 2/3; 1/2; 1];
   b = [3/2, -3/2, 1/2, 1/2];
   A = [ 1/2,    0,   0,   0;
         1/6,  1/2,   0,   0;
        -1/2,  1/2, 1/2,   0;
         3/2, -3/2, 1/2, 1/2];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Knoth-Wolke-ERK'))

   c = [0; 1/3; 3/4];
   b = [1/6, 3/10, 8/15];
   A = [0, 0, 0;
        1/3, 0, 0;
        -3/16, 15/16, 0];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'3/8-Rule-ERK'))

   c = [0; 1/3; 2/3; 1];
   b = [1/8, 3/8, 3/8, 1/8];
   A = [0, 0, 0, 0;
        1/3, 0, 0, 0;
        -1/3, 1, 0, 0;
        1, -1, 1, 0];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Cooper4-ERK'))

   c = [0; 2/3; 2/3; 1];
   b = [1/4, 1/4, 1/2, 0];
   A = [0, 0, 0, 0;
        2/3, 0, 0, 0;
        1/6, 1/2, 0, 0;
        1/4, 1/4, 1/2, 0];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Cooper4-ESDIRK'))

   c = [0; 2/3; 2/3; 1];
   b = [1/4, 1/4, 1/2, 0];
   A = [0, 0, 0, 0;
        (1-sqrt(3))/6, (3+sqrt(3))/6, 0, 0;
        (5+sqrt(3))/12, -(1+sqrt(3))/4, (3+sqrt(3))/6, 0;
        1/4, 1/4, 1/2, 0];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Cooper6-ERK'))

   c = [0; 1/2; 1/2; 1/2; 1; 1];
   b = [1/6, 0, 0, 2/3, 1/6, 0];
   A = [0, 0, 0, 0, 0, 0;
        1/2, 0, 0, 0, 0, 0;
        1/4, 1/4, 0, 0, 0, 0;
        1/4, 1/4, 0, 0, 0, 0;
        0, -1, 0, 2, 0, 0;
        1/6, 0, 0, 2/3, 1/6, 0];
   q = 5;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Cooper6-ESDIRK'))

   beta = 1.0685790213;
   c = [0; 1/2; 1/2; 1/2; 1; 1];
   b = [1/6, 0, 0, 2/3, 1/6, 0];
   A = [0, 0, 0, 0, 0, 0;
        (1-2*beta)/2, beta, 0, 0, 0, 0;
        1/4, (1-4*beta)/4, beta, 0, 0, 0;
        1/4, beta/2, (1-6*beta)/4, beta, 0, 0;
        0, -2*beta, (1-6*beta-8*beta^2)/(1-4*beta), 4*beta/(1-4*beta), 0, 0;
        1/6, 0, 0, 2/3, 1/6, 0];
   q = 5;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Heun-Euler-ERK'))

   A = [ 0, 0; 1, 0];
   b = [ 0.5, 0.5];
   b2 = [ 1, 0];
   c = [ 0; 1];
   q = 2;
   p = 1;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Bogacki-Shampine-ERK'))

   A = [0, 0, 0, 0; 1/2, 0, 0, 0; 0, 3/4, 0, 0; 2/9, 1/3, 4/9, 0];
   b = [2/9, 1/3, 4/9, 0];
   b2 = [7/24, 1/4, 1/3, 1/8];
   c = [0; 1/2; 3/4; 1];
   q = 3;
   p = 2;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Fehlberg-ERK'))

   A = [0, 0, 0, 0, 0, 0; ...
        1/4, 0, 0, 0, 0, 0; ...
        3/32, 9/32, 0, 0, 0, 0; ...
        1932/2197, -7200/2197, 7296/2197, 0, 0, 0; ...
        439/216, -8, 3680/513, -845/4104, 0, 0; ...
        -8/27, 2, -3544/2565, 1859/4104, -11/40, 0];
   b = [ 25/216, 0, 1408/2565, 2197/4104, -1/5, 0];
   b2 = [ 16/135, 0, 6656/12825, 28561/56430, -9/50, 2/55];
   c = [ 0; 1/4; 3/8; 12/13; 1; 1/2];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Cash-Karp-ERK'))

   A = [ 0, 0, 0, 0, 0, 0; ...
         1/5, 0, 0, 0, 0, 0; ...
         3/40, 9/40, 0, 0, 0, 0; ...
         3/10, -9/10, 6/5, 0, 0, 0; ...
         -11/54, 5/2, -70/27, 35/27, 0, 0; ...
         1631/55296, 175/512, 575/13824, 44275/110592, 253/4096, 0];
   b = [ 37/378, 0, 250/621, 125/594, 0, 512/1771];
   b2 = [ 2825/27648, 0, 18575/48384, 13525/55296, 277/14336, 1/4];
   c = [ 0; 1/5; 3/10; 3/5; 1; 7/8];
   q = 3;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Dormand-Prince-ERK'))

   A = [ 0, 0, 0, 0, 0, 0, 0; ...
         1/5, 0, 0, 0, 0, 0, 0; ...
         3/40, 9/40, 0, 0, 0, 0, 0; ...
         44/45, -56/15, 32/9, 0, 0, 0, 0; ...
         19372/6561, -25360/2187, 64448/6561, -212/729, 0, 0, 0; ...
         9017/3168, -355/33, 46732/5247, 49/176, -5103/18656, 0, 0; ...
         35/384, 0, 500/1113, 125/192, -2187/6784, 11/84, 0];
   b = [ 35/384, 0, 500/1113, 125/192, -2187/6784, 11/84, 0];
   b2 = [5179/57600, 0, 7571/16695, 393/640, -92097/339200, 187/2100, 1/40];
   c = [ 0; 1/5; 3/10; 4/5; 8/9; 1; 1];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'TRBDF2-ESDIRK'))

   A = [0, 0, 0; ...
      (2-sqrt(2))/2, (2-sqrt(2))/2, 0; ...
      sqrt(2)/4, sqrt(2)/4, (2-sqrt(2))/2];
   b = [sqrt(2)/4, sqrt(2)/4, (2-sqrt(2))/2];
   b2 = [(1-sqrt(2)/4)/3, (3*sqrt(2)/4+1)/3, (2-sqrt(2))/6];
   c = [0; 2-sqrt(2); 1];
   q = 2;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'TRX2-ESDIRK'))

   A = [ 0, 0, 0; 0.25, 0.25, 0; 0.25, 0.5, 0.25];
   b = [ 0.25, 0.5, 0.25];
   b2 = [ 1/6, 2/3, 1/6];
   c = [ 0; 0.5; 1];
   q = 2;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Billington-SDIRK'))

   A = [0.292893218813, 0, 0; 0.798989873223, 0.292893218813, 0; ...
        0.740789228841, 0.259210771159, 0.292893218813];
   b = [ 0.740789228840, 0.259210771159, 0];
   b2 = [ 0.691665115992, 0.503597029883, -0.195262145876];
   c = [ 0.292893218813; 1.091883092037; 1.292893218813];
   q = 2;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Cash(5,2,4)-SDIRK'))

   A = [0.435866521508, 0, 0, 0, 0; ...
       -1.13586652150, 0.435866521508, 0, 0, 0; ...
        1.08543330679, -0.721299828287, 0.435866521508, 0, 0; ...
        0.416349501547, 0.190984004184, -0.118643265417, 0.435866521508, 0; ...
        0.896869652944, 0.0182725272734, -0.0845900310706, ...
            -0.266418670647, 0.435866521508];
   b = [0.896869652944, 0.0182725272734, -0.0845900310706, ...
          -0.266418670647, 0.435866521508];
   b2 = [(-0.7-0.5)/(-0.7-0.435866521508), ...
          (0.5-0.435866521508)/(-0.7-0.435866521508), 0, 0, 0];
   c = [0.435866521508; -0.7; 0.8; 0.924556761814; 1];
   q = 4;
   p = 2;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Cash(5,3,4)-SDIRK'))

   A = [0.435866521508, 0, 0, 0, 0; ...
       -1.13586652150, 0.435866521508, 0, 0, 0; ...
        1.08543330679, -0.721299828287, 0.435866521508, 0, 0; ...
        0.416349501547, 0.190984004184, -0.118643265417, 0.435866521508, 0;...
        0.896869652944, 0.0182725272734, -0.0845900310706, ...
          -0.266418670647, 0.435866521508];
   b = [0.896869652944, 0.0182725272734, -0.0845900310706, ...
          -0.266418670647, 0.435866521508];
   b2 = [0.776691932910, 0.0297472791484, -0.0267440239074, 0.220304811849, 0];
   c = [0.435866521508; -0.7; 0.8; 0.924556761814; 1];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Kvaerno(4,2,3)-ESDIRK'))

   A = [0, 0, 0, 0; ...
        0.4358665215, 0.4358665215, 0, 0; ...
        0.490563388419108, 0.073570090080892, 0.4358665215, 0; ...
        0.308809969973036, 1.490563388254106, -1.235239879727145, 0.4358665215];
   b = [0.308809969973036, 1.490563388254106, -1.235239879727145, 0.4358665215];
   b2 = [0.490563388419108, 0.073570090080892, 0.4358665215, 0];
   c = [0; 0.871733043; 1; 1];
   q = 3;
   p = 2;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Kvaerno(5,3,4)-ESDIRK'))

   A = [0, 0, 0, 0, 0; ...
        0.4358665215, 0.4358665215, 0, 0, 0; ...
        0.140737774731968, -0.108365551378832, 0.4358665215, 0, 0;...
        0.102399400616089, -0.376878452267324, 0.838612530151233, 0.4358665215, 0;...
        0.157024897860995, 0.117330441357768, 0.61667803039168, -0.326899891110444, 0.4358665215];
   b = [0.157024897860995, 0.117330441357768, 0.61667803039168, -0.326899891110444, 0.4358665215];
   b2 = [0.102399400616089, -0.376878452267324, 0.838612530151233, 0.4358665215, 0];
   c = [0; 0.871733043; 0.468238744853136; 1; 1];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Kvaerno(7,4,5)-ESDIRK'))

   A = [0, 0, 0, 0, 0, 0, 0; ...
        0.26, 0.26, 0, 0, 0, 0, 0; ...
        0.13, 0.84033320996790809, 0.26, 0, 0, 0, 0; ...
        0.22371961478320505, 0.47675532319799699, -0.06470895363112615, 0.26, 0, 0, 0; ...
        0.16648564323248321, 0.10450018841591720, 0.03631482272098715, -0.13090704451073998, 0.26, 0, 0; ...
        0.13855640231268224, 0, -0.04245337201752043, 0.02446657898003141, 0.61943039072480676, 0.26, 0; ...
        0.13659751177640291, 0, -0.05496908796538376, -0.04118626728321046, 0.62993304899016403, 0.06962479448202728, 0.26];

   b = [0.13659751177640291, 0, -0.05496908796538376, -0.04118626728321046, 0.62993304899016403, 0.06962479448202728, 0.26];
   b2 = [0.13855640231268224, 0, -0.04245337201752043, 0.02446657898003141, 0.61943039072480676, 0.26, 0];
   c = [0; 0.52; 1.230333209967908; 0.895765984350076; 0.436393609858648; 1; 1];
   q = 5;
   p = 4;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ERK-1-1'))

   A = [0];
   b = [1];
   c = [0];
   q = 1;
   B = [c, A; q, b];

elseif (strcmp(method_name,'ERK-2-2'))

   A = [ 0, 0; 2/3, 0];
   b = [ 1/4, 3/4];
   c = [ 0; 2/3];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'ERK-3-3'))

   A = [ 0, 0, 0; 1/2, 0, 0; -1, 2, 0];
   b = [ 1/6, 2/3, 1/6];
   b2 = [0, 1, 0];
   c = [ 0; 1/2; 1];
   q = 3;
   p = 2;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'ERK-4-4'))

   A = [0, 0, 0, 0; 1/2, 0, 0, 0; 0, 1/2, 0, 0; 0, 0, 1, 0];
   b = [1/6, 1/3, 1/3, 1/6];
   c = [0; 1/2; 1/2; 1];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Merson-4-3-ERK'))

   A = [0, 0, 0, 0, 0; 1/3, 0, 0, 0, 0; 1/6, 1/6, 0, 0, 0; ...
        1/8, 0, 3/8, 0, 0; 1/2, 0, -3/2, 2, 0];
   b = [1/6, 0, 0, 2/3, 1/6];
   b2 = [1/10, 0, 3/10, 2/5, 1/5];
   c = [0; 1/3; 1/3; 1/2; 1];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Zonneveld-4-3-ERK'))

   A = [0, 0, 0, 0, 0; 1/2, 0, 0, 0, 0; 0, 1/2, 0, 0, 0; ...
        0, 0, 1, 0, 0; 5/32, 7/32, 13/32, -1/32, 0];
   b = [1/6, 1/3, 1/3, 1/6, 0];
   b2 = [-1/2, 7/3, 7/3, 13/6, -16/3];
   c = [0; 1/2; 1/2; 1; 3/4];
   q = 4;
   p = 3;
   B = [c, A; q, b; p, b2];


elseif (strcmp(method_name,'Verner-6-5-ERK'))

   A = [0, 0, 0, 0, 0, 0, 0, 0; ...
        1/6, 0, 0, 0, 0, 0, 0, 0; ...
        4/75, 16/75, 0, 0, 0, 0, 0, 0; ...
        5/6, -8/3, 5/2, 0, 0, 0, 0, 0; ...
        -165/64, 55/6, -425/64, 85/96, 0, 0, 0, 0; ...
        12/5, -8, 4015/612, -11/36, 88/255, 0, 0, 0; ...
        -8263/15000, 124/75, -643/680, -81/250, 2484/10625, 0, 0, 0; ...
        3501/1720, -300/43, 297275/52632, -319/2322, 24068/84065, 0, 3850/26703, 0];
   b = [3/40, 0, 875/2244, 23/72, 264/1955, 0, 125/11592, 43/616];
   b2 = [13/160, 0, 2375/5984, 5/16, 12/85, 3/44, 0, 0];

   c = [0; 1/6; 4/15; 2/3; 5/6; 1; 1/15; 1];
   q = 6;
   p = 5;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Fehlberg-8-7-ERK'))

   A = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; ...
        2/27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; ...
        1/36, 1/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; ...
        1/24, 0, 1/8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; ...
        5/12, 0, -25/16, 25/16, 0, 0, 0, 0, 0, 0, 0, 0, 0; ...
        1/20, 0, 0, 1/4, 1/5, 0, 0, 0, 0, 0, 0, 0, 0; ...
        -25/108, 0, 0, 125/108, -65/27, 125/54, 0, 0, 0, 0, 0, 0, 0; ...
        31/300, 0, 0, 0, 61/225, -2/9, 13/900, 0, 0, 0, 0, 0, 0; ...
        2, 0, 0, -53/6, 704/45, -107/9, 67/90, 3, 0, 0, 0, 0, 0; ...
        -91/108, 0, 0, 23/108, -976/135, 311/54, -19/60, 17/6, -1/12, 0, 0, 0, 0; ...
        2383/4100, 0, 0, -341/164, 4496/1025, -301/82, 2133/4100, 45/82, 45/164, 18/41, 0, 0, 0; ...
        3/205, 0, 0, 0, 0, -6/41, -3/205, -3/41, 3/41, 6/41, 0, 0, 0; ...
        -1777/4100, 0, 0, -341/164, 4496/1025, -289/82, 2193/4100, 51/82, 33/164, 12/41, 0, 1, 0];
   b = [0, 0, 0, 0, 0, 34/105, 9/35, 9/35, 9/280, 9/280, 0, 41/840, 41/840];
   b2 = [41/840, 0, 0, 0, 0, 34/105, 9/35, 9/35, 9/280, 9/280, 41/840, 0, 0];

   c = [0; 2/27; 1/9; 1/6; 5/12; 1/2; 5/6; 1/6; 2/3; 1/3; 1; 0; 1];
   q = 8;
   p = 7;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'SDIRK-2-2'))

   A = [1-1/sqrt(2), 0; 1/sqrt(2), 1-1/sqrt(2)];
   b = [ 1/sqrt(2), 1 - 1/sqrt(2)];
   c = [ 1-1/sqrt(2); 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SDIRK-2-1'))

   A = [1, 0; -1, 1];
   b = [ 1/2, 1/2];
   b2 = [ 1, 0];
   c = [ 1; 0];
   q = 2;
   p = 1;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'IRK-1-1'))

   c = [1];
   b = [1];
   A = [1];
   q = 1;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Crank-Nicolson-2-2-IRK'))

   A = [ 1/2, 1/2; 0, 0];
   b = [ 1/2, 1/2];
   c = [ 1; 0];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SIRK-2-2'))

   A = [(5-3*sqrt(2))/4, (7-5*sqrt(2))/4; (1+1*sqrt(2))/4, (3-1*sqrt(2))/4];
   b = [ (1+1*sqrt(2))/4, (3-1*sqrt(2))/4];
   c = [ 3-2*sqrt(2); 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Gauss-2-4-IRK'))

   A = [1/4, 1/4-sqrt(3)/6; 1/4+sqrt(3)/6, 1/4];
   b = [1/2, 1/2];
   c = [1/2-sqrt(3)/6; 1/2+sqrt(3)/6];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'RadauIIA-2-3-IRK'))

   A = [5/12, -1/12; 9/12, 3/12];
   b = [3/4, 1/4];
   c = [1/3; 1];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIII-2-2-IRK'))

   A = [0, 0; 1, 0];
   b = [1/2, 1/2];
   c = [0; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIA-2-2-IRK'))

   A = [ 0, 0; 1/2, 1/2];
   b = [ 1/2, 1/2];
   c = [ 0; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIC-2-2-IRK'))

   A = [ 1/2, -1/2; 1/2, 1/2];
   b = [ 1/2, 1/2];
   c = [ 0; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'Gauss-3-6-IRK'))

   A = [5/36, 2/9-sqrt(15)/15, 5/36-sqrt(15)/30; ...
      5/36+sqrt(15)/24, 2/9, 5/36-sqrt(15)/24; ...
      5/36+sqrt(15)/30, 2/9+sqrt(15)/15, 5/36];
   c = [0.5-sqrt(15)/10; 0.5; 0.5+sqrt(15)/10];
   b = [5/18, 8/18, 5/18];
   q = 6;
   B = [c, A; q, b];

elseif (strcmp(method_name,'RadauI-3-5-IRK'))

   A = [0, 0, 0; ...
      (9+sqrt(6))/75, (24+sqrt(6))/120, (168-73*sqrt(6))/600; ...
      (9-sqrt(6))/75, (168+73*sqrt(6))/600, (24-sqrt(6))/120];
   b = [1/9, (16+sqrt(6))/36, (16-sqrt(6))/36];
   c = [0; (6-sqrt(6))/10; (6+sqrt(6))/10];
   q = 5;
   B = [c, A; q, b];

elseif (strcmp(method_name,'RadauIA-3-5-IRK'))

   A = [1/9, -(1+sqrt(6))/18, -(1-sqrt(6))/18; ...
      1/9, (88+7*sqrt(6))/360, (88-43*sqrt(6))/360; ...
      1/9, (88+43*sqrt(6))/360, (88-7*sqrt(6))/360];
   b = [1/9, (16+sqrt(6))/36, (16-sqrt(6))/36];
   c = [0; (6-sqrt(6))/10; (6+sqrt(6))/10];
   q = 5;
   B = [c, A; q, b];

elseif (strcmp(method_name,'RadauII-3-5-IRK'))

   A = [(24-sqrt(6))/120, (24-11*sqrt(6))/120, 0; ...
      (24+11*sqrt(6))/120, (24+sqrt(6))/120, 0; ...
      (6-sqrt(6))/12, (6+sqrt(6))/12, 0];
   b = [(16-sqrt(6))/36, (16+sqrt(6))/36, 1/9];
   c = [(4-sqrt(6))/10; (4+sqrt(6))/10; 1];
   q = 5;
   B = [c, A; q, b];

elseif (strcmp(method_name,'RadauIIA-3-5-IRK'))

   A = [(88-7*sqrt(6))/360, (296-169*sqrt(6))/1800, (-2+3*sqrt(6))/225; ...
      (296+169*sqrt(6))/1800, (88+7*sqrt(6))/360, (-2-3*sqrt(6))/225; ...
      (16-sqrt(6))/36, (16+sqrt(6))/36, 1/9];
   b = [(16-sqrt(6))/36, (16+sqrt(6))/36, 1/9];
   c = [(4-sqrt(6))/10; (4+sqrt(6))/10; 1];
   q = 5;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIII-3-4-IRK'))

   A = [0, 0, 0; 1/4, 1/4, 0; 0, 1, 0];
   b = [1/6, 2/3, 1/6];
   c = [0; 0.5; 1];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIA-3-4-IRK'))

   A = [ 0, 0, 0; 5/24, 1/3, -1/24; 1/6, 2/3, 1/6];
   b = [ 1/6, 2/3, 1/6];
   c = [ 0; 1/2; 1];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIB-3-4-IRK'))

   A = [ 1/6, -1/6, 0; 1/6, 1/3, 0; 1/6, 5/6, 0];
   b = [ 1/6, 2/3, 1/6];
   c = [ 0; 1/2; 1];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIC-3-4-IRK'))

   A = [ 1/6, -1/3, 1/6; 1/6, 5/12, -1/12; 1/6, 2/3, 1/6];
   b = [ 1/6, 2/3, 1/6];
   c = [ 0; 1/2; 1];
   q = 4;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIII-4-6-IRK'))

   A = [0, 0, 0, 0; ...
      (5+sqrt(5))/60, 1/6, (15-7*sqrt(5))/60, 0; ...
      (5-sqrt(5))/60, (15+7*sqrt(5))/60, 1/6, 0; ...
      1/6, (5-sqrt(5))/12, (5+sqrt(5))/12, 0];
   b = [1/12, 5/12, 5/12, 1/12];
   c = [0; (5-sqrt(5))/10; (5+sqrt(5))/10; 1];
   q = 6;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIA-4-6-IRK'))

   A = [0, 0, 0, 0; ...
      (11+sqrt(5))/120, (25-sqrt(5))/120, (25-13*sqrt(5))/120, (-1+sqrt(5))/120; ...
      (11-sqrt(5))/120, (25+13*sqrt(5))/120, (25+sqrt(5))/120, (-1-sqrt(5))/120; ...
      1/12, 5/12, 5/12, 1/12];
   b = [1/12, 5/12, 5/12, 1/12];
   c = [0; (5-sqrt(5))/10; (5+sqrt(5))/10; 1];
   q = 6;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIB-4-6-IRK'))

   A = [1/12, (-1-sqrt(5))/24, (-1+sqrt(5))/24, 0; ...
      1/12, (25+sqrt(5))/120, (25-13*sqrt(5))/120, 0; ...
      1/12, (25+13*sqrt(5))/120, (25-sqrt(5))/120, 0; ...
      1/12, (11-sqrt(5))/24, (11+sqrt(5))/24, 0];
   b = [1/12, 5/12, 5/12, 1/12];
   c = [0; (5-sqrt(5))/10; (5+sqrt(5))/10; 1];
   q = 6;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIC-4-6-IRK'))

   A = [1/12, -sqrt(5)/12, sqrt(5)/12, -1/12; ...
      1/12, 1/4, (10-7*sqrt(5))/60, sqrt(5)/60; ...
      1/12, (10+7*sqrt(5))/60, 1/4, -sqrt(5)/60; ...
      1/12, 5/12, 5/12, 1/12];
   b = [1/12, 5/12, 5/12, 1/12];
   c = [0; (5-sqrt(5))/10; (5+sqrt(5))/10; 1];
   q = 6;
   B = [c, A; q, b];

elseif (strcmp(method_name,'RadauIIA-5-9-IRK'))

   A = [0.07299886431790337, -0.02673533110794565, 0.01867692976398445, ...
          -0.01287910609330652, 0.005042839233882052;
      0.1537752314791824, 0.1462148678474935, -0.03644456890512816, ...
          0.02123306311930480, -0.007935579902728813;
      0.1400630456848099, 0.2989671294912833, 0.1675850701352492, ...
          -0.03396910168661794, 0.01094428874419233;
      0.1448943081095342, 0.2765000687601608, 0.3257979229104191, ...
          0.1287567532549115, -0.01570891737880607;
      0.1437135607912259, 0.2813560151494621, 0.3118265229757413, ...
          0.2231039010835707, 0.04];
   b = [0.1437135607912259, 0.2813560151494621, 0.3118265229757413, ...
      0.2231039010835707, 0.04];
   c = [0.05710419611451768; 0.2768430136381238; 0.5835904323689168; ...
      0.8602401356562195; 1];
   q = 9;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIII-5-8-IRK'))

   A = [0, 0, 0, 0, 0; ...
      1/14, 1/9, (13-3*sqrt(21))/63, (14-3*sqrt(21))/126, 0; ...
      1/32, (91+21*sqrt(21))/576, 11/72, (91-21*sqrt(21))/576, 0; ...
      1/14, (14+3*sqrt(21))/126, (13+3*sqrt(21))/63, 1/9, 0; ...
      0, 7/18, 2/9, 7/18, 0];
   b = [1/20, 49/180, 16/45, 49/180, 1/20];
   c = [0; (7-sqrt(21))/14; 1/2; (7+sqrt(21))/14; 1];
   q = 8;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIA-5-8-IRK'))

   A = [0, 0, 0, 0, 0; ...
      (119+3*sqrt(21))/1960, (343-9*sqrt(21))/2520, (392-96*sqrt(21))/2205, (343-69*sqrt(21))/2520, (-21+3*sqrt(21))/1960; ...
      13/320, (392+105*sqrt(21))/2880, 8/45, (392-105*sqrt(21))/2880, 3/320; ...
      (119-3*sqrt(21))/1960, (343+69*sqrt(21))/2520, (392+96*sqrt(21))/2205, (343+9*sqrt(21))/2520, (-21-3*sqrt(21))/1960; ...
      1/20, 49/180, 16/45, 49/180, 1/20];
   b = [1/20, 49/180, 16/45, 49/180, 1/20];
   c = [0; (7-sqrt(21))/14; 1/2; (7+sqrt(21))/14; 1];
   q = 8;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIB-5-8-IRK'))

   A = [1/20, (-7-sqrt(21))/120, 1/15, (-7+sqrt(21))/120, 0; ...
      1/20, (343+9*sqrt(21))/2520, (56-15*sqrt(21))/315, (343-69*sqrt(21))/2520, 0; ...
      1/20, (49+12*sqrt(21))/360, 8/45, (49-12*sqrt(21))/360, 0; ...
      1/20, (343+69*sqrt(21))/2520, (56+15*sqrt(21))/315, (343-9*sqrt(21))/2520, 0; ...
      1/20, (119-3*sqrt(21))/360, 13/45, (119+3*sqrt(21))/360, 0];
   b = [1/20, 49/180, 16/45, 49/180, 1/20];
   c = [0; (7-sqrt(21))/14; 1/2; (7+sqrt(21))/14; 1];
   q = 8;
   B = [c, A; q, b];

elseif (strcmp(method_name,'LobattoIIIC-5-8-IRK'))

   A = [1/20, -7/60, 2/15, -7/60, 1/20; ...
      1/20, 29/180, (47-15*sqrt(21))/315, (203-30*sqrt(21))/1260, -3/140; ...
      1/20, (329+105*sqrt(21))/2880, 73/360, (329-105*sqrt(21))/2880, 3/160; ...
      1/20, (203+30*sqrt(21))/1260, (47+15*sqrt(21))/315, 29/180, -3/140; ...
      1/20, 49/180, 16/45, 49/180, 1/20];
   b = [1/20, 49/180, 16/45, 49/180, 1/20];
   c = [0; (7-sqrt(21))/14; 1/2; (7+sqrt(21))/14; 1];
   q = 8;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SDIRK-5-4'))

   A = [1/4, 0, 0, 0, 0; ...
      1/2, 1/4, 0, 0, 0; ...
      17/50, -1/25, 1/4, 0, 0; ...
      371/1360, -137/2720, 15/544, 1/4, 0; ...
      25/24, -49/48, 125/16, -85/12, 1/4];
   b = [25/24, -49/48, 125/16, -85/12, 1/4];
   c = [1/4; 3/4; 11/20; 1/2; 1];
   b2 = [59/48, -17/96, 225/32, -85/12, 0];
   q = 3;
   p = 3;
   B = [c, A; q, b; p, b2];

elseif (strcmp(method_name,'Gauss-6-12-IRK'))

   A = [0.042831123094792580851996218950605, -0.014763725997197424643891429014278,  ...
          0.0093250507064777618411400734121424, -0.0056688580494835162182488917046817, ...
          0.0028544333150993149102007359161104, -0.00081278017126476782600392067714199; ...
      0.092673491430378856970823740288243,  0.090190393262034655662118827897123,  ...
          -0.020300102293239581308124404430781,  0.010363156240246421640614877198502,  ...
          -0.0048871929280376802268550750181669, 0.001355561055485051944941864725486;  ...
      0.082247922612843859526233540856659,  0.19603216233324501065540377853111,   ...
          0.11697848364317276194496135254516,  -0.020482527745656096032756375665715,  ...
          0.007989991899662334513029865501749, -0.0020756257848663355105554732114538; ...
      0.087737871974451497214547911112663,  0.1723907946244069768112077902925,    ...
          0.25443949503200161992267908075603,   0.11697848364317276194496135254516,   ...
          -0.015651375809175699331166122736864,  0.00341432357674130217775889704455;   ...
      0.084306685134100109759050573175723,  0.18526797945210699155109273081241,   ...
          0.22359381104609910224930782789182,   0.2542570695795851051980471095211,    ...
          0.090190393262034655662118827897123, -0.007011245240793695266831302387034;  ...
      0.086475026360849929529996358578351,  0.17752635320896999641403691987814,   ...
          0.239625825335829040108171596795,     0.22463191657986776204878263167818,   ...
          0.19514451252126673596812908480852,   0.042831123094792580851996218950605];
   b = [0.085662246189585161703992437901209, 0.18038078652406931132423765579425, ...
      0.23395696728634552388992270509032, 0.23395696728634552388992270509032, ...
      0.18038078652406931132423765579425, 0.085662246189585161703992437901209];
   c = [0.0337652428984239749709672651079; 0.16939530676686775922945571437594;
      0.38069040695840154764351126459587; 0.61930959304159845235648873540413;
      0.83060469323313224077054428562406; 0.9662347571015760250290327348921];
   q = 12;
   B = [c, A; q, b];

elseif (strcmp(method_name,'ARK(2,3,2)-ERK'))

   gamma = 1 - 1/sqrt(2);
   alpha = 1/6 * (3+2*sqrt(2));
   delta = 1/(2*sqrt(2));
   twogamma = 2 * gamma;

   A = [0,         0,     0; ...
        twogamma,  0,     0; ...
        1 - alpha, alpha, 0];
   b = [delta, delta, gamma];
   c = [0; twogamma; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'ARK(2,3,2)-SDIRK'))

   gamma = 1 - 1/sqrt(2);
   alpha = 1/6 * (3+2*sqrt(2));
   delta = 1/(2*sqrt(2));
   twogamma = 2 * gamma;

   A = [0,     0,     0; ...
        gamma, gamma, 0; ...
        delta, delta, gamma];
   b = [delta, delta, gamma];
   c = [0; twogamma; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(2,2,2)-ERK'))

   A = [0, 0; ...
        1, 0];
   b = [1/2, 1/2];
   c = [0; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(2,2,2)-SDIRK'))

   gamma = 1 - 1/sqrt(2);

   A = [gamma,       0;...
        1 - 2*gamma, gamma];
   b = [1/2, 1/2];
   c = [gamma; 1 - gamma];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lpm1-ERK'))

   A = [  0,   0, 0;...
        1/2,   0, 0;...
        1/2, 1/2, 0];
   b = [1/3, 1/3, 1/3];
   c = [0; 1/2; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lpm1-SDIRK'))

   A = [         2/11,    0,    0;...
            2829/9317, 2/11,    0;...
        148529/428582, 7/23, 2/11];
   b = [1/3, 1/3, 1/3];
   c = [2/11; 4523/9317; 15517/18634];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lpm2-ERK'))

   A = [  0,   0, 0;...
        1/2,   0, 0;...
        1/2, 1/2, 0];
   b = [1/3, 1/3, 1/3];
   c = [0; 1/2; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lpm2-SDIRK'))

   A = [        2/11,     0,    0;...
          2583/13310,  2/11,    0;...
        39731/139755, 10/21, 2/11];
   b = [1/3, 1/3, 1/3];
   c = [2/11; 5003/13310; 6271/6655];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lpum-ERK'))

   A = [  0,   0, 0;...
        1/2,   0, 0;...
        1/2, 1/2, 0];
   b = [1/3, 1/3, 1/3];
   c = [0; 1/2; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lpum-SDIRK'))

   A = [        2/11,      0,    0;...
              41/154,   2/11,    0;...
             289/847, 42/121, 2/11];
   b = [1/3, 1/3, 1/3];
   c = [2/11; 69/154; 67/77];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lspum-ERK'))

   A = [    0,     0, 0;...
          5/6,     0, 0;...
        11/24, 11/24, 0];
   b = [24/55, 1/5, 4/11];
   c = [0; 5/6; 11/12];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-lspum-SDIRK'))

   A = [        2/11,      0,    0;...
             205/462,   2/11,    0;...
           2033/4620, 21/110, 2/11];
   b = [24/55, 1/5, 4/11];
   c = [2/11; 289/462; 751/924];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-a-ERK'))

   A = [  0,   0, 0;...
        1/2,   0, 0;...
        1/2, 1/2, 0];
   b = [1/3, 1/3, 1/3];
   c = [0; 1/2; 1.0];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-a-DIRK'))

   A = [1/4,   0,   0;...
          0, 1/4,   0;...
        1/3, 1/3, 1/3];
   b = [1/3, 1/3, 1/3];
   c = [1/4; 1/4; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-b-ERK'))

   A = [  0,   0, 0;...
        1/2,   0, 0;...
        1/2, 1/2, 0];
   b = [1/3, 1/3, 1/3];
   c = [0; 1/2; 1.0];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP2(3,3,2)-b-DIRK'))

   A = [ 1/5,   0,   0;...
        1/10, 1/5,   0;...
         1/3, 1/3, 1/3];
   b = [1/3, 1/3, 1/3];
   c = [1/5; 3/10; 1];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP3(3,3,2)-ERK'))

   A = [  0,   0, 0;...
          1,   0, 0;...
        1/4, 1/4, 0];
   b = [1/6, 1/6, 2/3];
   c = [0; 1; 1/2];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP3(3,3,2)-SDIRK'))

   gamma = 1 - 1/sqrt(2);
   A = [      gamma,     0,     0;...
        1 - 2*gamma, gamma,     0;...
        1/2 - gamma,     0, gamma];
   b = [1/6, 1/6, 2/3];
   c = [gamma; 1-gamma; 1/2];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP3(3,3,3)-ERK'))

   A = [  0,   0, 0;...
          1,   0, 0;...
        1/4, 1/4, 0];
   b = [1/6, 1/6, 2/3];
   c = [0; 1; 1/2];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP3(3,3,3)-ESDIRK'))

   A = [    0,    0,    0;...
        14/15, 1/15,    0;...
         7/30,  1/5, 1/15];
   b = [1/6, 1/6, 2/3];
   c = [0; 1; 1/2];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP3(4,3,3)-ERK'))

   A = [  0,   0,   0, 0;...
          0,   0,   0, 0;...
          0,   1,   0, 0;...
          0, 1/4, 1/4, 0];
   b = [0, 1/6, 1/6, 2/3];
   c = [0;   0;   1; 1/2];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSP3(4,3,3)-SDIRK'))

   alpha = 0.24169426078821;
   beta  = 0.06042356519705;
   eta   = 0.12915286960590;
   delta = 0.5 - beta - eta - alpha;

   A = [ alpha,       0,     0      0;...
        -alpha,   alpha,     0,     0;...
             0, 1-alpha, alpha,     0;
          beta,     eta, delta, alpha];
   b = [0,     1/6, 1/6, 2/3];
   c = [alpha;   0;   1; 1/2];
   q = 2;
   B = [c, A; q, b];

elseif (strcmp(method_name,'SSPRK(3,3)-Shu-Osher-ERK'))

   A = [ 0,   0,   0;...
         1,   0,   0;...
         1/4, 1/4, 0];
   b = [ 1/6, 1/6, 2/3];
   c = [ 0;   1;   1/2];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'EDIRK-3-3'))

   % Pairs with SSPRK(3,3)-Shu-Osher-ERK to make 3rd order IMEX method
   %
   % General form (with free parameter beta):
   %
   % gamma = (2*beta^2 - (3/2)*beta + 1/3)/(2-4*beta);
   % A = [ 0,              0,                0;...
   %       4*gamma+2*beta, 1-4*gamma-2*beta, 0;...
   %       1/2-beta-gamma, gamma,            beta];

   beta  = 2/3;
   gamma = -1/3;

   A = [ 0,   0,    0;...
         0,   1,    0 ;...
         1/6, -1/3, 2/3];
   b = [ 1/6, 1/6, 2/3];
   c = [ 0;   1;   1/2];
   q = 3;
   B = [c, A; q, b];

elseif (strcmp(method_name,'ESDIRK-3-3'))

   % Pairs with SSPRK(3,3)-Shu-Osher-ERK to make 3rd order IMEX method
   %
   % In general gamma = (2*beta^2 - (3/2)*beta + 1/3)/(2-4*beta);

   beta  = sqrt(3)/6 + 1/2;
   gamma = (-1/8)*(sqrt(3)+1);

   A = [ 0,              0,                0;...
         4*gamma+2*beta, 1-4*gamma-2*beta, 0;...
         1/2-beta-gamma, gamma,            beta];
   b = [ 1/6, 1/6, 2/3];
   c = [ 0;   1;   1/2];
   q = 3;
   B = [c, A; q, b];

else

   B = 0;
   fprintf('Butcher error, method %s not defined\n',method_name);

end

% end of function
